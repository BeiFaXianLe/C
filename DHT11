#include "stm32f10x.h"
#include "delay.h"
#include "dht11.h"


void DHT11_Init(void)
{
	GPIO_InitTypeDef GPIO_InitStructure;
	
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);
	
	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_1;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;
	GPIO_Init(GPIOA,&GPIO_InitStructure);
	
	GPIO_SetBits(GPIOA,GPIO_Pin_1);
	
}

uint8_t DHT11_Read(uint8_t *data)
{
	uint8_t i,j;
	uint16_t err=30000;
	GPIO_ResetBits(GPIOA,GPIO_Pin_1);
	delay_ms(20);
	GPIO_SetBits(GPIOA,GPIO_Pin_1);
	delay_us(50);
	if(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_1)==0)
	{
		delay_us(40);
		while(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_1)==0&&(err-- >0));
		delay_us(60);
		while(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_1)==1&&(err-- >0));
		for(i=0;i<5;i++)
		{
			for(j=0;j<8;j++)
			{
				data[i]<<=1;
				delay_us(40);
				while(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_1)==0&&(err-- >0));
				delay_us(30);
				if(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_1)==1)
				{
					data[i]|=0x01;
					delay_us(30);
					while(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_1)==1&&(err-- >0));
				}
				else
				{
					data[i]&=0xFE;
				}
			}
		}
		delay_us(50);
	}
if(err<=0)
return 0;
else
return 1;
}
